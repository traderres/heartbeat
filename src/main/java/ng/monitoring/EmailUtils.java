package ng.monitoring;

import org.simplejavamail.email.Email;
import org.simplejavamail.mailer.Mailer;
import org.simplejavamail.mailer.config.ServerConfig;
import org.simplejavamail.mailer.config.TransportStrategy;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


/**
 * Created by adam on 8/30/2017.
 */
public class EmailUtils
{
    private static final Logger logger = LoggerFactory.getLogger(EmailUtils.class);


    private Mailer mailer;


    /*******************************************************************************
     * EmailUtils()
     *
     ********************************************************************************/
    public EmailUtils(String aSmtpHostname, int aSmtpPort, String aAccountUsername, String aAccountPassword)
    {
        if ((aSmtpHostname == null) || (aSmtpHostname.length() == 0))
        {
            throw new RuntimeException("Critical Error in EmailUtils:  The passed-in aSmtpHostname was null or empty.");
        }
        else if (aSmtpPort <= 0)
        {
            throw new RuntimeException("Critical Error in EmailUtils:  The passed-in aSmtpPort was less than 1.  It should be a positive integer.");
        }
        else if ((aAccountUsername == null) || (aAccountUsername.length() == 0))
        {
            throw new RuntimeException("Critical Error in EmailUtils:  The passed-in aAccountUsername was null or empty.");
        }
        else if ((aAccountPassword == null) || (aAccountPassword.length() == 0))
        {
            throw new RuntimeException("Critical Error in EmailUtils:  The passed-in aAccountPassword was null or empty.");
        }

        // Instantiate the Mailer object
        this.mailer = new Mailer(
            new ServerConfig(aSmtpHostname, aSmtpPort, aAccountUsername, aAccountPassword), TransportStrategy.SMTP_SSL
        );

        this.mailer.setDebug(true);
    }

    /*******************************************************************************
     * sendEmailWithStats()
     *
     ********************************************************************************/
    public void sendEmailWithStats(String aStatsSummary)
    {
        logger.debug("sendEmailWithStats() started.");

        String sServerRunDateTime = DateUtils.getCurrentDateTime();
        String sServerRunDate     = DateUtils.getCurrentDate();
        String sProgramMainClass  = ProgramUtils.getMainClassName();
        String sProgramCWD        = ProgramUtils.getCurrentWorkingDirectory();
        String sServerHostname    = ProgramUtils.getHostname();

        String sSubject = String.format(
            "%s:  Weekly Stats as of %s", sProgramMainClass, sServerRunDate
        );


        String sEmailBody = String.format(
                "W E E K L Y       S T A T I S T I C S       R E P O R T\n\n\n" +
                "%s\n\n\n" +
                "--------------------------------------------------\n" +
                "This email was generated by the following program:\n" +
                "  Program Name:     %s\n" +
                "  Program CWD:      %s\n" +
                "  Server Run Time:  %s\n" +
                "  Server Hostname:  %s\n", aStatsSummary, sProgramMainClass, sProgramCWD, sServerRunDateTime, sServerHostname);

        Email email = new Email();

        email.addNamedToRecipients("Recipient's name", "recipient@yahoo.com");
//        email.addNamedToRecipients("C. Cane", "candycane@candyshop.org");
//        email.addNamedCcRecipients("C. Bo", "chocobo@candyshop.org");
//        email.addRecipients("Tasting Group", Message.RecipientType.BCC, "taster1@cgroup.org;taster2@cgroup.org;tester <taster3@cgroup.org>");
//        email.addBccRecipients("Mr Sweetnose <snose@candyshop.org>");

        email.setFromAddress("no-reply", "no-reply@bogus.com");
        email.setReplyToAddress("no-reply", "no-reply@bogus.com");
        email.setSubject(sSubject);
//        email.setText(sEmailBody);



        // To maintain spacing, we use an old-style <pre>...</pre> tag
        // If the email is displayed as HTML, then it appears as courier
        email.setTextHTML("<pre>" + sEmailBody + "</pre>");

        email.addHeader("X-Priority", 5);
        email.setUseReturnReceiptTo(false);

//        email.signWithDomainKey(privateKeyData, "somemail.com", "selector");

        // S E N D     T H E     E M A I L
        this.mailer.sendMail(email);

        logger.debug("sendEmailWithStats() finished successfully.");
    }


    /*******************************************************************************
     * sendEmailSiteIsDown()
     *
     ********************************************************************************/
    public void sendEmailSiteIsDown()
    {
        logger.debug("sendEmailSiteIsDown() started.");

        String sServerRunDateTime = DateUtils.getCurrentDateTime();
        String sProgramMainClass  = ProgramUtils.getMainClassName();
        String sProgramCWD        = ProgramUtils.getCurrentWorkingDirectory();
        String sServerHostname    = ProgramUtils.getHostname();

        String sSubject = String.format("%s:  Site is down", sProgramMainClass);

        String sEmailBody = String.format(
                "W E B S I T E        I S        D O W N\n\n\n" +
                        "The monitored website is now down\n\n\n" +
                        "--------------------------------------------------\n" +
                        "This email was generated by the following program:\n" +
                        "  Program Name:     %s\n" +
                        "  Program CWD:      %s\n" +
                        "  Server Run Time:  %s\n" +
                        "  Server Hostname:  %s\n",  sProgramMainClass, sProgramCWD, sServerRunDateTime, sServerHostname);

        Email email = new Email();

        email.addNamedToRecipients("Recipient's name", "recipient@yahoo.com");
        email.setFromAddress("no-reply", "no-reply@bogus.com");
        email.setReplyToAddress("no-reply", "no-reply@bogus.com");
        email.setSubject(sSubject);

        // To maintain spacing, we use an old-style <pre>...</pre> tag
        // If the email is displayed as HTML, then it appears as courier
        email.setTextHTML("<pre>" + sEmailBody + "</pre>");
        email.addHeader("X-Priority", 5);
        email.setUseReturnReceiptTo(false);

        // S E N D     T H E     E M A I L
        this.mailer.sendMail(email);

        logger.debug("sendEmailSiteIsDown() finished successfully.");
    }

    /*******************************************************************************
     * sendEmailSiteIsUp()
     *
     ********************************************************************************/
    public void sendEmailSiteIsUp()
    {
        logger.debug("sendEmailSiteIsUp() started.");

        String sServerRunDateTime = DateUtils.getCurrentDateTime();
        String sProgramMainClass  = ProgramUtils.getMainClassName();
        String sProgramCWD        = ProgramUtils.getCurrentWorkingDirectory();
        String sServerHostname    = ProgramUtils.getHostname();

        String sSubject = String.format("%s:  Site is up", sProgramMainClass);

        String sEmailBody = String.format(
                "W E B S I T E        I S        U P \n\n\n" +
                        "The monitored website is now back up\n\n\n" +
                        "--------------------------------------------------\n" +
                        "This email was generated by the following program:\n" +
                        "  Program Name:     %s\n" +
                        "  Program CWD:      %s\n" +
                        "  Server Run Time:  %s\n" +
                        "  Server Hostname:  %s\n",  sProgramMainClass, sProgramCWD, sServerRunDateTime, sServerHostname);

        Email email = new Email();

        email.addNamedToRecipients("Recipient's name", "recipient@yahoo.com");
        email.setFromAddress("no-reply", "no-reply@bogus.com");
        email.setReplyToAddress("no-reply", "no-reply@bogus.com");
        email.setSubject(sSubject);

        // To maintain spacing, we use an old-style <pre>...</pre> tag
        // If the email is displayed as HTML, then it appears as courier
        email.setTextHTML("<pre>" + sEmailBody + "</pre>");
        email.addHeader("X-Priority", 5);
        email.setUseReturnReceiptTo(false);


        // S E N D     T H E     E M A I L
        this.mailer.sendMail(email);

        logger.debug("sendEmailSiteIsUp() finished successfully.");
    }
}
